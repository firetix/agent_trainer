{
    "analysisPlan": {
        "successEvaluationRubric": "AutomaticRubric",
        "successEvaluationPrompt": "You are an expert call evaluator. You will be provided with a transcript of a call and the system prompt of the AI participant. Your task is to determine if the call was successful based on the objectives inferred from the system prompt.\n\nEvaluation Criteria:\n\nEffective Openers (did_have_openers): Did the caller start the conversation with a good opening line or an effective way to begin the conversation?\nProblem Identification (did_identify_pb): Was the caller able to correctly identify the customer's problems or opportunities?\nObjection Handling (did_handle_objections): Did the caller handle the customer's objections effectively?\nFollow-Up (did_follow_up): Did the caller follow up appropriately with the customer?\nPlease assess the call based on these criteria."
    },
    "backgroundSound": "office",
    "endCallPhrases": [
        "bye for now",
        "talk soon"
    ],
    "endCallMessage": "Thanks for reaching out to SmartHome Innovations. It was great assisting you. Have a wonderful day!",
    "voicemailMessage": "Hi, you've reached Leo at SmartHome Innovations. Sorry I missed your call. Please leave a message, and I'll get back to you as soon as possible.",
    "firstMessage": "Hi there! I'm {{ name }}, Why are you calling me today?",
    "transcriber": {
        "model": "nova-2",
        "provider": "deepgram",
        "language": "en"
    },
    "name": "{{ name }}",
    "serverMessages": [
        "end-of-call-report",
        "status-update",
        "hang",
        "function-call"
    ],
    "clientMessages": [
        "transcript",
        "hang",
        "function-call",
        "speech-update",
        "metadata",
        "conversation-update"
    ],
    "endCallFunctionEnabled": true,
    "recordingEnabled": true,
    "voice": {
        "voiceId": "andrew",
        "provider": "azure"
    },
    "model": {
        "maxTokens": 250,
        "temperature": 0.7,
        "provider": "openai",
        "model": "gpt-4o",
        "messages": [
            {
                "content": "{{ sdr_prompt_final }}",
                "role": "system"
            }
        ]
    }
}